__d(function (global, require, module, exports, _dependencyMap) {
  var _curry2 = require(_dependencyMap[0], './internal/_curry2');

  var _isFunction = require(_dependencyMap[1], './internal/_isFunction');

  var curryN = require(_dependencyMap[2], './curryN');

  var toString = require(_dependencyMap[3], './toString');

  module.exports = _curry2(function invoker(arity, method) {
    return curryN(arity + 1, function () {
      var target = arguments[arity];

      if (target != null && _isFunction(target[method])) {
        return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
      }

      throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
    });
  });
});