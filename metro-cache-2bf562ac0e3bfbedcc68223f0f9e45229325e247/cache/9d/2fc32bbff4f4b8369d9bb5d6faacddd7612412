__d(function (global, require, module, exports, _dependencyMap) {
  var _forceReduced = require(_dependencyMap[0], './_forceReduced');

  var _isArrayLike = require(_dependencyMap[1], './_isArrayLike');

  var _reduce = require(_dependencyMap[2], './_reduce');

  var _xfBase = require(_dependencyMap[3], './_xfBase');

  module.exports = function () {
    var preservingReduced = function preservingReduced(xf) {
      return {
        '@@transducer/init': _xfBase.init,
        '@@transducer/result': function transducerResult(result) {
          return xf['@@transducer/result'](result);
        },
        '@@transducer/step': function transducerStep(result, input) {
          var ret = xf['@@transducer/step'](result, input);
          return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
        }
      };
    };

    return function _xcat(xf) {
      var rxf = preservingReduced(xf);
      return {
        '@@transducer/init': _xfBase.init,
        '@@transducer/result': function transducerResult(result) {
          return rxf['@@transducer/result'](result);
        },
        '@@transducer/step': function transducerStep(result, input) {
          return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
        }
      };
    };
  }();
});